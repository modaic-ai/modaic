name: Trigger Documentation Sync
on:
  push:
    branches:
      - master
      - main
    paths:
      - "site/**" # Only trigger when site folder changes
  workflow_dispatch: # Allow manual triggering
    inputs:
      force_sync:
        description: "Force sync even if no changes detected"
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  actions: write

jobs:
  trigger-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Need at least 2 commits to compare changes

      - name: Check for site changes
        id: check-changes
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ inputs.force_sync }}" == "true" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Force sync requested"
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            # Check if site folder actually changed in this push
            if git diff --name-only HEAD^ HEAD | grep -q "^site/"; then
              echo "changed=true" >> $GITHUB_OUTPUT
              echo "Site folder changes detected"
            else
              echo "changed=false" >> $GITHUB_OUTPUT
              echo "No site folder changes detected"
            fi
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes to sync"
          fi

      - name: Push site content to docs-sync branch
        if: steps.check-changes.outputs.changed == 'true'
        id: push-docs-branch
        run: |
          # Create and switch to docs-sync branch
          git checkout -B docs-sync

          # Remove everything except site folder
          find . -maxdepth 1 -not -name '.git' -not -name 'site' -not -name '.' -exec rm -rf {} \;

          # Move site contents to root
          mv site/* . 2>/dev/null || true
          mv site/.* . 2>/dev/null || true
          rmdir site 2>/dev/null || true

          # Stage all changes
          git add -A

          # Commit the docs-only content
          git commit -m "docs: sync site content for subtree

          Source commit: ${{ github.sha }}
          Source ref: ${{ github.ref_name }}" || {
            echo "No changes to commit"
            exit 0
          }

          # Push the docs-sync branch
          git push origin docs-sync --force

          # Get info for payload
          DOCS_COMMIT=$(git rev-parse HEAD)
          FILE_COUNT=$(find . -type f -not -path './.git/*' | wc -l)

          echo "docs_commit=${DOCS_COMMIT}" >> $GITHUB_OUTPUT
          echo "docs_file_count=${FILE_COUNT}" >> $GITHUB_OUTPUT

      - name: Verify branch is published
        if: steps.check-changes.outputs.changed == 'true'
        id: verify-branch
        run: |
          # Wait a moment for GitHub to process the push
          sleep 5

          # Verify the branch exists and has the expected commit
          EXPECTED_COMMIT="${{ steps.push-docs-branch.outputs.docs_commit }}"

          # Check if branch exists on remote
          REMOTE_COMMIT=$(curl -s -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/modaic-ai/modaic/branches/docs-sync" | \
            jq -r '.commit.sha // empty')

          if [ "$REMOTE_COMMIT" = "$EXPECTED_COMMIT" ]; then
            echo "branch_ready=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Branch docs-sync is published and ready"
            echo "üìù Remote commit: $REMOTE_COMMIT"
          else
            echo "branch_ready=false" >> $GITHUB_OUTPUT
            echo "‚ùå Branch verification failed"
            echo "Expected: $EXPECTED_COMMIT"
            echo "Got: $REMOTE_COMMIT"
            exit 1
          fi

      - name: Trigger sync in modaic-dev repository
        if: steps.check-changes.outputs.changed == 'true' && steps.verify-branch.outputs.branch_ready == 'true'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.DOCS_SYNC_TOKEN }}
          repository: modaic-ai/modaic-dev
          event-type: docs-sync
          client-payload: |
            {
              "source_repo": "modaic-ai/modaic",
              "docs_branch": "docs-sync",
              "docs_commit": "${{ steps.push-docs-branch.outputs.docs_commit }}",
              "docs_file_count": "${{ steps.push-docs-branch.outputs.docs_file_count }}",
              "source_commit": "${{ github.sha }}",
              "source_ref": "${{ github.ref_name }}",
              "trigger_type": "${{ github.event_name }}",
              "force_sync": "${{ inputs.force_sync || 'false' }}",
              "triggered_at": "${{ github.event.head_commit.timestamp }}"
            }

      - name: Log trigger details
        if: steps.check-changes.outputs.changed == 'true' && steps.verify-branch.outputs.branch_ready == 'true'
        run: |
          echo "‚úÖ Documentation sync triggered successfully"
          echo "üìÅ Docs files: ${{ steps.push-docs-branch.outputs.docs_file_count }}"
          echo "üìù Docs branch commit: ${{ steps.push-docs-branch.outputs.docs_commit }}"
          echo "üéØ Target repository: modaic-ai/modaic-dev"

      - name: Log no changes
        if: steps.check-changes.outputs.changed == 'false'
        run: |
          echo "‚ÑπÔ∏è No documentation sync needed - no changes detected in site folder"
